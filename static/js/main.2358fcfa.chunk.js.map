{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","rows","onChange","event","console","log","target","value","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.2358fcfa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex mx-2\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n             \r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'white'}`}>\r\n                <input onClick={props.toggleMode}\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                 \r\n                >\r\n             Enable dark Mode\r\n                </label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    console.log(\"Upper case up click\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handlelowClick = () => {\r\n    console.log(\"Upper case lower click\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const handleclearClick = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Upper onchange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handlecopy = () => {\r\n    var text = document.getElementById(\"textArea\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"text copied!\", \"success\");\r\n  };\r\n\r\n  const handleexspace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\"\"));\r\n    props.showAlert(\"space cleared!\", \"success\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#121212\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            className=\"form-control\"\r\n            id=\"textArea\"\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n            value={text}\r\n            placeholder=\"Enter text here\"\r\n          ></textarea>\r\n        </div>\r\n        <button onClick={handleUpClick} className=\"btn btn-primary mx-2\">\r\n          Conver to uppercase\r\n        </button>\r\n        <button onClick={handlelowClick} className=\"btn btn-primary mx-2\">\r\n          Convert to lowercase\r\n        </button>\r\n        <button onClick={handleclearClick} className=\"btn btn-primary mx-2\">\r\n          Clear text\r\n        </button>\r\n        <button onClick={handlecopy} className=\"btn btn-primary mx-2\">\r\n          Copy text\r\n        </button>\r\n        <button onClick={handleexspace} className=\"btn btn-primary\">\r\n          remove extra space\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\"\").length} words and {text.length} character\r\n        </p>\r\n        <p>{0.008 * text.split(\"\").length} Minutes to read</p>\r\n        <h1>Preview</h1>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something to textbox above preview it here \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst Alert = (props) => {\r\n\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n    \r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show mt-2`} role=\"alert\">\r\n        \r\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","import { useState } from \"react\";\nimport \"./App.css\";\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type:type\n    });\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#121212\";\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode'\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode'\n    }\n  };\n  return (\n    <>\n{/*      \n      <Router> */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Routes>\n      */}\n    \n     \n      {/* <Route path='/about' element={<About/>} /> */}\n      {/* <Route exact path='/' element={ */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n      {/* } // /> */}\n    \n{/*     \n      </Routes>\n   */}\n      </div>\n  \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}